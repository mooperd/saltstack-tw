# The client will get the tracking code (first request) and send the tracking data (second request)
# The client will get the tracking code (first request) and send the tracking data (second request)
# This should normally done very fast and keep in mind that the first request often doesn't come up because of caching
keepalive_requests 2;
keepalive_timeout  3;

# OLD: log_format tracking    '$status|$time_iso8601|$request|$http_referer|$http_user_agent|$remote_addr|$http_x_forwarded_for|$http_accept_language|$cookie__dcmn_uid';
log_format tracking '$status|$time_iso8601|$request|$http_user_agent|$remote_addr|';

# define variables for tracking data
map $request_method $tracking {
    default 0;
    GET     1;
}
map $query_string $trackingSiteId {
    ~(^|&)idsite=(?P<siteId>[0-9]*) $siteId;
}
map $time_iso8601 $trackingTime {
    ~^(?P<time>[0-9]*-[0-9]*-[0-9]*) $time;
}

server {
    listen 80;

    root /usr/share/nginx/html;

    location ~ "^/t(racking\.php)?$" {
        if ($tracking = 1) { # this can be changed in nginx >= v1.7.0
            access_log /var/log/nginx/tracking/${trackingTime}_${trackingSiteId}_${host}.log tracking;
        }
        expires           -1;
        if_modified_since off;
        etag              off;
        empty_gif;
        break;
    }

    location /healthcheck.txt {
        access_log        off;
        expires           -1;
        if_modified_since off;
        etag              off;
        break;
    }

    location /monitor/ {
        auth_basic           "Server Monitoring";
        auth_basic_user_file /etc/nginx/htpasswd/monitor.htpasswd;

        expires           -1;
        if_modified_since off;
        etag              off;
        autoindex on;
    }
}

server {
    listen 443;

    ssl                  on;
    ssl_certificate      /etc/ssl/dcmn-com.crt;
    ssl_certificate_key  /etc/ssl/dcmn-com.key;
    ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;    
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    ssl_dhparam         /etc/ssl/dhparam.pem;

    root /usr/share/nginx/html;

    location ~ "^/t(racking\.php)?$" {
        if ($tracking = 1) { # this can be changed in nginx >= v1.7.0
            access_log /var/log/nginx/tracking/${trackingTime}_${trackingSiteId}_${host}.log tracking;
        }
        expires           -1;
        if_modified_since off;
        etag              off;
        empty_gif;
        break;
    }

    location /healthcheck.txt {
        access_log        off;
        expires           -1;
        if_modified_since off;
        etag              off;
        break;
    }

    location /monitor/ {
        auth_basic           "Server Monitoring";
        auth_basic_user_file /etc/nginx/htpasswd/monitor.htpasswd;

        expires           -1;
        if_modified_since off;
        etag              off;
        autoindex on;
    }
}
